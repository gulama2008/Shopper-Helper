[{"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/index.js":"1","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/App.js":"2","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/Signup.js":"3","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/MainContainer.js":"4","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/Login.js":"5","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Navbar.js":"6","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/ShoppingList.js":"7","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/ItemTags.js":"8","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/InputItem.js":"9","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/CreateNewList.js":"10","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/HistoricalList/HistoricalList.js":"11","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Statistics/Statistics.js":"12","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Settings/Settings.js":"13","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Header/Header.js":"14","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/utils/mutations.js":"15","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/utils/auth.js":"16"},{"size":197,"mtime":1681560513028,"results":"17","hashOfConfig":"18"},{"size":1663,"mtime":1682324453654,"results":"19","hashOfConfig":"18"},{"size":3188,"mtime":1682256011807,"results":"20","hashOfConfig":"18"},{"size":2537,"mtime":1682341981766,"results":"21","hashOfConfig":"18"},{"size":5874,"mtime":1682339434929,"results":"22","hashOfConfig":"18"},{"size":4472,"mtime":1682307476826,"results":"23","hashOfConfig":"18"},{"size":8974,"mtime":1681906491137,"results":"24","hashOfConfig":"18"},{"size":1220,"mtime":1681907341147,"results":"25","hashOfConfig":"18"},{"size":2681,"mtime":1681906880941,"results":"26","hashOfConfig":"18"},{"size":3441,"mtime":1682256768143,"results":"27","hashOfConfig":"18"},{"size":139,"mtime":1681531121877,"results":"28","hashOfConfig":"18"},{"size":131,"mtime":1681564420427,"results":"29","hashOfConfig":"18"},{"size":127,"mtime":1681531136986,"results":"30","hashOfConfig":"18"},{"size":1383,"mtime":1682342039436,"results":"31","hashOfConfig":"18"},{"size":851,"mtime":1682338551637,"results":"32","hashOfConfig":"18"},{"size":720,"mtime":1682334214841,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"wvt2pe",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/index.js",[],["74","75"],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/App.js",["76"],"import React, { useState } from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport \"./styles/App.css\";\nimport Header from \"./components/MainContainer/Header/Header\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport MainContainer from \"./pages/MainContainer\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(\"CreateNewList\");\n  const handlePageChange = (page) => setCurrentPage(page);\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Routes>\n          <Route\n            path=\"/*\"\n            element={\n              <MainContainer\n                currentPage={currentPage}\n                handlePageChange={handlePageChange}\n              />\n            }\n          ></Route>\n          <Route path=\"/login\" element={<Login />}></Route>\n          <Route path=\"/signup\" element={<Signup />}></Route>\n        </Routes>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/Signup.js",["77","78","79","80","81","82","83","84","85","86"],"import {\n  AutoComplete,\n  Button,\n  Cascader,\n  Checkbox,\n  Col,\n  Form,\n  Input,\n  InputNumber,\n  Row,\n  Select,\n} from 'antd';\nimport { useState } from 'react';\nimport \"../styles/Register.css\"\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 10,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 10,\n    },\n  },\n};\nconst Signup = () => {\n  const [form] = Form.useForm();\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n  };\n  \n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n  \n  const validatePassword = (password) => { \n\n  }\n  return (\n    <div className=\"register-container\">\n      <Form\n        className=\"register-form\"\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        style={{\n          maxWidth: 600,\n        }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[\n            {\n              type: \"email\",\n              message: \"The input is not valid E-mail!\",\n            },\n            {\n              required: true,\n              message: \"Please input your E-mail!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n            {\n              min: 8,\n              message: \"Must be at least 8 characters!\",\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"confirm\"\n          label=\"Confirm Password\"\n          dependencies={[\"password\"]}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: \"Please confirm your password!\",\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(\"The two passwords that you entered do not match!\")\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"nickname\"\n          label=\"Nickname\"\n          tooltip=\"What do you want others to call you?\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your nickname!\",\n              whitespace: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\nexport default Signup;\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/MainContainer.js",["87","88","89"],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/Login.js",["90","91","92","93"],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Navbar.js",[],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/ShoppingList.js",["94","95","96","97","98","99","100"],"import React, { useState } from \"react\";\nimport {\n  Col,\n  Divider,\n  Row,\n  InputNumber,\n  Select,\n  Typography,\n  Button,\n  Input,\n  DatePicker,\n} from \"antd\";\nimport { CloseOutlined} from \"@ant-design/icons\";\nimport \"../../../styles/ShoppingList.css\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\ndayjs.extend(customParseFormat);\nconst { RangePicker } = DatePicker;\nconst dateFormat = \"DD/MM/YYYY\";\nconst weekFormat = \"DD/MM\";\nconst monthFormat = \"MM/YYYY\";\nconst { Text} = Typography;\nconst dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\", \"DD-MM-YYYY\", \"DD-MM-YY\"];\n\nconst ShoppingList = (props) => {\n  const { items, updateItem, unitOptions, shopOptions,date } = props;\n\n  //change the date of each item in the state into the date on the date-picker\n  // const handleDateChange = (date, dateString) => {\n  //   const newItemList = items.map((item) => {\n  //     item.date = dateString;\n  //     return item;\n  //   });\n  //   updateItem(newItemList);\n  // };\n\n  //change the quantity of each item in the state into the quantity entered in the input box\n  const handleQuantityChange = (index) => {\n    return (e) => {\n      const newItemList = items.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          item.quantity = e;\n          return item;\n        } else {\n          return item;\n        }\n      });\n      updateItem(newItemList);\n    };\n  };\n\n  //change the unit of each item in the state into the unit chosen from the select box\n  const handleUnitChange = (index) => {\n    return (e) => {\n      const newItemList = items.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          item.unit = e;\n          return item;\n        } else {\n          return item;\n        }\n      });\n      updateItem(newItemList);\n    };\n  };\n\n  //change the shop of each item in the state into the shop chosen from the select box\n  const handleShopChange = (index) => {\n    return (e) => {\n      const newItemList = items.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          item.shop = e;\n          return item;\n        } else {\n          return item;\n        }\n      });\n      updateItem(newItemList);\n    };\n  };\n\n  //change the price of each item in the state into the price entered in the input box\n  const handlePriceChange = (index) => {\n    return (e) => {\n      const newItemList = items.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          item.price = e.target.value;\n          return item;\n        } else {\n          return item;\n        }\n      });\n      updateItem(newItemList);\n    };\n  };\n\n  //change the status of each item in the state into bought or pending when clicking the button\n  const handleStatusButton = (index) => {\n    const newItemList = items.map((item, itemIndex) => {\n      if (itemIndex === index) {\n        item.bought = !item.bought;\n        return item;\n      } else {\n        return item;\n      }\n    });\n    updateItem(newItemList);\n  };\n\n  //delete the item from the state when click the delete icon\n  const handleDeleteButton = (index) => {\n    const newItemList = items.filter((item, itemIndex) => {\n      return itemIndex !== index;\n    });\n    updateItem(newItemList);\n  };\n\n  return (\n    <div>\n      \n      <div>\n        <Row\n          className=\"title-row\"\n          gutter={{\n            xs: 8,\n            sm: 16,\n            md: 24,\n            lg: 32,\n          }}\n        >\n          <Col className=\"gutter-row title-col\" span={3}>\n            <div className=\"\">\n              <Text strong className=\"title-text\">\n                Item\n              </Text>\n            </div>\n          </Col>\n\n          <Col className=\"gutter-row title-col\" span={3}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Quantity\n              </Text>\n            </div>\n          </Col>\n          <Col className=\"gutter-row title-col\" span={3}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Unit\n              </Text>\n            </div>\n          </Col>\n          <Col className=\"gutter-row title-col\" span={4}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Shop\n              </Text>\n            </div>\n          </Col>\n          <Col className=\"gutter-row title-col\" span={3}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Unit Price\n              </Text>\n            </div>\n          </Col>\n          <Col className=\"gutter-row title-col\" span={3}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Total Price\n              </Text>\n            </div>\n          </Col>\n          <Col className=\"gutter-row title-col\" span={4}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Action\n              </Text>\n            </div>\n          </Col>\n        </Row>\n      </div>\n      <div>\n        {items.map((item, index) => {\n          return (\n            <Row\n              key={item.id}\n              className=\"content-row\"\n              gutter={{\n                xs: 8,\n                sm: 16,\n                md: 24,\n                lg: 32,\n              }}\n            >\n              <Col className=\"gutter-row content-col-name\" span={3}>\n                <div className=\"\">{item.name}</div>\n              </Col>\n\n              <Col className=\"gutter-row content-col\" span={3}>\n                <Divider type=\"vertical\" className=\"content-divider\" />\n                <div>\n                  <InputNumber\n                    min={1}\n                    value={item.quantity}\n                    onChange={handleQuantityChange(index)}\n                  />\n                </div>\n              </Col>\n              <Col className=\"gutter-row content-col\" span={3}>\n                <Divider type=\"vertical\" className=\"content-divider\" />\n                <div>\n                  <Select\n                    defaultValue={item.unit}\n                    style={{\n                      width: 80,\n                    }}\n                    onChange={handleUnitChange(index)}\n                    options={unitOptions}\n                  />\n                </div>\n              </Col>\n              <Col className=\"gutter-row content-col\" span={4}>\n                <Divider type=\"vertical\" className=\"content-divider\" />\n                <div>\n                  <Select\n                    defaultValue={item.shop}\n                    style={{\n                      width: 120,\n                    }}\n                    onChange={handleShopChange(index)}\n                    options={shopOptions}\n                  />\n                </div>\n              </Col>\n              <Col className=\"gutter-row content-col\" span={3}>\n                <Divider type=\"vertical\" className=\"content-divider\" />\n                <div>\n                  <Input\n                    value={item.price}\n                    onChange={handlePriceChange(index)}\n                  />\n                </div>\n              </Col>\n              <Col className=\"gutter-row content-col-name\" span={3}>\n                <Divider type=\"vertical\" className=\"content-divider\" />\n                <div className=\"\">{item.quantity * item.price}</div>\n              </Col>\n\n              <Col className=\"gutter-row content-col\" span={4}>\n                <Divider type=\"vertical\" className=\"content-divider\" />\n                <div>\n                  <Button\n                    className=\"status-button\"\n                    type=\"primary\"\n                    onClick={() => {\n                      handleStatusButton(index);\n                    }}\n                    style={\n                      item.bought\n                        ? {\n                            backgroundColor: \"rgba(245,245,245,255)\",\n                            color: \"rgba(184,184,184,255)\",\n                          }\n                        : {\n                            backgroundColor: \"rgba(23,119,255,255)\",\n                            color: \"rgba(254,254,255,255)\",\n                          }\n                    }\n                  >\n                    {item.bought ? \"Bought\" : \"Pending\"}\n                  </Button>\n                  <CloseOutlined\n                    className=\"delete-icon\"\n                    onClick={() => {\n                      handleDeleteButton(index);\n                    }}\n                  />\n                </div>\n              </Col>\n            </Row>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ShoppingList;\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/ItemTags.js",["101","102"],"import { Space, Tag } from \"antd\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"../../../styles/ItemTags.css\"\n\nfunction ItemTags(props) {\n  const { items,addItem,date}=props\n  const tagArray = [\n    {\n      id: 1,\n      name: \"Apple\",\n      quantity: 3,\n      unit: \"kg\",\n      shop: \"Woolworths\",\n      price: \"\",\n      bought:false\n    },\n    {\n      id: 2,\n      name: \"Milk\",\n      quantity: 1,\n      unit: \"bottle\",\n      shop: \"Coles\",\n      price: 3.5,\n      bought:false,\n    },\n    {\n      id: 3,\n      name: \"Egg\",\n      quantity: 2,\n      unit: \"box\",\n      shop: \"Aldi\",\n      price: 4.5,\n      bought:false\n    },\n    {\n      id: 4,\n      name: \"Tomato\",\n      quantity: 3,\n      unit: \"kg\",\n      shop: \"Woolworths\",\n      price: \"\",\n      bought:false\n    },\n  ];\n  const [tags, setTags] = useState(tagArray);\n\n  const handleTagClick = (e) => { \n    const item = tags.find((tag) => tag.name === e.target.innerText)\n    item.date = date;\n    addItem(item);\n  } \n\n  return (\n    <Space size={[0, 8]} wrap>\n      {tags.map((tag) => { \n        return <Tag className=\"item-tag\" key={tag.id} onClick={handleTagClick}>{ tag.name}</Tag>\n      })}\n  </Space>)\n}\n  \nexport default ItemTags;\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/InputItem.js",["103","104"],"import { Button, Form, Input, Select, InputNumber } from \"antd\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst InputItem = (props) => {\n  const { items, addItem, unitOptions,shopOptions,date } =\n    props;\n  const [form] = Form.useForm();\n  const [formLayout, setFormLayout] = useState(\"inline\");\n\n  //set states for the current values in all form's areas\n  const [currentItemName, setCurrentItemName] = useState();\n  const [currentItemQuantity, setCurrentItemQuantity] = useState();\n  const [currentItemUnit, setCurrentItemUnit] = useState();\n  const [currentItemShop, setCurrentItemShop] = useState();\n\n  //handle functions when values changes in form's areas\n  const handleNameChange = (e) => { \n    setCurrentItemName(e.target.value);\n  }\n  const handleQuantityChange = (value) => {\n    setCurrentItemQuantity(value);\n  };\n  const handleUnitChange = (value) => {\n    setCurrentItemUnit(value);\n  };\n  const handleShopChange = (value) => {\n    setCurrentItemShop(value);\n  };\n\n  //set state for a collection of all values from the form areas\n  // const [itemObj, setItemObj] = useState();\n\n  const handleAddButtonClick = (e) => { \n    e.preventDefault();\n    const newItem = {\n      name: currentItemName,\n      quantity: currentItemQuantity,\n      unit: currentItemUnit,\n      shop: currentItemShop,\n      price: \"\",\n      date: date,\n      bought: false,\n    };\n    addItem(newItem);\n    console.log(newItem);\n  }\n  \n  \n  return (\n    <Form\n      layout={formLayout}\n      form={form}\n      initialValues={{\n        layout: formLayout,\n      }}\n      style={{}}\n    >\n      <Form.Item label=\"Item\">\n        <Input\n          placeholder=\"Please enter an item\"\n          // value={inputItemValue ? inputItemValue.name : currentItemName}\n          // value={ inputItemValue.name}\n          onChange={handleNameChange}\n        />\n      </Form.Item>\n      <Form.Item label=\"Quantity\">\n        <InputNumber\n          min={1}\n          placeholder=\"\"\n          style={{\n            width: 50,\n          }}\n          onChange={handleQuantityChange}\n        />\n      </Form.Item>\n      <Form.Item label=\"Unit\">\n        <Select\n          style={{\n            width: 80,\n          }}\n          onChange={handleUnitChange}\n          options={unitOptions}\n        />\n      </Form.Item>\n      <Form.Item label=\"Shop\">\n        <Select\n          style={{\n            width: 120,\n          }}\n          onChange={handleShopChange}\n          options={shopOptions}\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" onClick={handleAddButtonClick}>\n          Add\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nexport default InputItem;\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/CreateNewList.js",["105","106","107","108","109","110"],"import React, { useState } from \"react\";\nimport InputItem from \"./InputItem\";\nimport ItemTags from \"./ItemTags\";\nimport ShoppingList from \"./ShoppingList\";\nimport { Divider } from \"antd\";\nimport { DatePicker, Typography } from \"antd\";\nimport \"../../../styles/AddNewList.css\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\ndayjs.extend(customParseFormat);\nconst { RangePicker } = DatePicker;\nconst dateFormat = \"DD/MM/YYYY\";\nconst weekFormat = \"DD/MM\";\nconst monthFormat = \"MM/YYYY\";\nconst { Text } = Typography;\nconst dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\", \"DD-MM-YYYY\", \"DD-MM-YY\"];\n\nexport default function AddNewList() {\n  const test = [\n    {\n      id: 1,\n      date: \"\",\n      name: \"Apple\",\n      quantity: 2,\n      unit: \"kg\",\n      shop: \"Woolworths\",\n      price: \"\",\n      bought: false,\n    },\n    {\n      id: 2,\n      date: \"\",\n      name: \"Milk\",\n      quantity: 2,\n      unit: \"bottle\",\n      shop: \"Coles\",\n      price: \"\",\n      bought: false,\n    },\n    {\n      id: 3,\n      date: \"\",\n      name: \"Egg\",\n      quantity: 1,\n      unit: \"box\",\n      shop: \"Aldi\",\n      price: \"\",\n      bought: false,\n    },\n    {\n      id: 4,\n      date: \"\",\n      name: \"Tomato\",\n      quantity: 3,\n      unit: \"kg\",\n      shop: \"Woolworths\",\n      price: \"\",\n      bought: false,\n    },\n    {\n      id: 5,\n      date: \"\",\n      name: \"Soap\",\n      quantity: 5,\n      unit: \"box\",\n      shop: \"Big W\",\n      price: \"\",\n      bought: false,\n    },\n  ];\n  const [items, setItems] = useState(test);\n  const [date, setDate] = useState(dayjs().format(\"DD/MM/YYYY\"));\n  const [unitOptions, setUnitOptions] = useState([\n    {\n      value: \"kg\",\n      label: \"kg\",\n    },\n    {\n      value: \"bottle\",\n      label: \"bottle\",\n    },\n    {\n      value: \"box\",\n      label: \"box\",\n    },\n    {\n      value: \"bag\",\n      label: \"bag\",\n    },\n  ]);\n  const [shopOptions, setShopOptions] = useState([\n    {\n      value: \"Woolworths\",\n      label: \"Woolworths\",\n    },\n    {\n      value: \"Coles\",\n      label: \"Coles\",\n    },\n    {\n      value: \"Aldi\",\n      label: \"Aldi\",\n    },\n    {\n      value: \"Big W\",\n      label: \"Big W\",\n    },\n  ]);\n  const addItem = (item) => {\n    const newItemList = [...items, item];\n    setItems(newItemList);\n  };\n  const updateItem = (newItemList) => {\n    setItems(newItemList);\n  };\n\n  const handleDateChange = (date, dateString) => {\n    setDate(dateString);\n    const newItemList = items.map((item) => {\n      item.date = dateString;\n      return item;\n    });\n    updateItem(newItemList);\n  };\n\n  return (\n    <div className=\"addnewlist-container\">\n      <div>\n        <InputItem\n          items={items}\n          addItem={addItem}\n          unitOptions={unitOptions}\n          shopOptions={shopOptions}\n          date={date}\n        />\n        <Text strong className=\"choose-item-text\">\n          Or choose one item from the following tags\n        </Text>\n        <ItemTags items={items} addItem={addItem} date={date} />\n      </div>\n      <Divider />\n      <div className=\"date-picker\">\n        <DatePicker\n          defaultValue={dayjs()}\n          format={dateFormatList}\n          onChange={handleDateChange}\n        />\n      </div>\n      <div>\n        <ShoppingList\n          items={items}\n          updateItem={updateItem}\n          unitOptions={unitOptions}\n          shopOptions={shopOptions}\n          date={date}\n        />\n      </div>\n    </div>\n  );\n}\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/HistoricalList/HistoricalList.js",[],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Statistics/Statistics.js",[],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Settings/Settings.js",[],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Header/Header.js",["111","112","113","114","115"],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/utils/mutations.js",[],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/utils/auth.js",["116"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":12,"column":8,"nodeType":"123","messageId":"124","endLine":12,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":2,"column":3,"nodeType":"123","messageId":"124","endLine":2,"endColumn":15},{"ruleId":"121","severity":1,"message":"126","line":4,"column":3,"nodeType":"123","messageId":"124","endLine":4,"endColumn":11},{"ruleId":"121","severity":1,"message":"127","line":5,"column":3,"nodeType":"123","messageId":"124","endLine":5,"endColumn":11},{"ruleId":"121","severity":1,"message":"128","line":6,"column":3,"nodeType":"123","messageId":"124","endLine":6,"endColumn":6},{"ruleId":"121","severity":1,"message":"129","line":9,"column":3,"nodeType":"123","messageId":"124","endLine":9,"endColumn":14},{"ruleId":"121","severity":1,"message":"130","line":10,"column":3,"nodeType":"123","messageId":"124","endLine":10,"endColumn":6},{"ruleId":"121","severity":1,"message":"131","line":11,"column":3,"nodeType":"123","messageId":"124","endLine":11,"endColumn":9},{"ruleId":"121","severity":1,"message":"132","line":52,"column":10,"nodeType":"123","messageId":"124","endLine":52,"endColumn":28},{"ruleId":"121","severity":1,"message":"133","line":52,"column":30,"nodeType":"123","messageId":"124","endLine":52,"endColumn":51},{"ruleId":"121","severity":1,"message":"134","line":54,"column":9,"nodeType":"123","messageId":"124","endLine":54,"endColumn":25},{"ruleId":"121","severity":1,"message":"135","line":7,"column":20,"nodeType":"123","messageId":"124","endLine":7,"endColumn":29},{"ruleId":"121","severity":1,"message":"136","line":10,"column":27,"nodeType":"123","messageId":"124","endLine":10,"endColumn":33},{"ruleId":"121","severity":1,"message":"137","line":32,"column":20,"nodeType":"123","messageId":"124","endLine":32,"endColumn":31},{"ruleId":"121","severity":1,"message":"138","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"139","line":17,"column":19,"nodeType":"123","messageId":"124","endLine":17,"endColumn":24},{"ruleId":"121","severity":1,"message":"140","line":17,"column":26,"nodeType":"123","messageId":"124","endLine":17,"endColumn":30},{"ruleId":"141","severity":1,"message":"142","line":125,"column":16,"nodeType":"143","endLine":125,"endColumn":27},{"ruleId":"121","severity":1,"message":"144","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"145","line":18,"column":9,"nodeType":"123","messageId":"124","endLine":18,"endColumn":20},{"ruleId":"121","severity":1,"message":"146","line":19,"column":7,"nodeType":"123","messageId":"124","endLine":19,"endColumn":17},{"ruleId":"121","severity":1,"message":"147","line":20,"column":7,"nodeType":"123","messageId":"124","endLine":20,"endColumn":17},{"ruleId":"121","severity":1,"message":"148","line":21,"column":7,"nodeType":"123","messageId":"124","endLine":21,"endColumn":18},{"ruleId":"121","severity":1,"message":"149","line":23,"column":7,"nodeType":"123","messageId":"124","endLine":23,"endColumn":21},{"ruleId":"121","severity":1,"message":"150","line":26,"column":55,"nodeType":"123","messageId":"124","endLine":26,"endColumn":59},{"ruleId":"121","severity":1,"message":"151","line":7,"column":11,"nodeType":"123","messageId":"124","endLine":7,"endColumn":16},{"ruleId":"121","severity":1,"message":"152","line":46,"column":16,"nodeType":"123","messageId":"124","endLine":46,"endColumn":23},{"ruleId":"121","severity":1,"message":"151","line":6,"column":11,"nodeType":"123","messageId":"124","endLine":6,"endColumn":16},{"ruleId":"121","severity":1,"message":"153","line":9,"column":22,"nodeType":"123","messageId":"124","endLine":9,"endColumn":35},{"ruleId":"121","severity":1,"message":"145","line":11,"column":9,"nodeType":"123","messageId":"124","endLine":11,"endColumn":20},{"ruleId":"121","severity":1,"message":"146","line":12,"column":7,"nodeType":"123","messageId":"124","endLine":12,"endColumn":17},{"ruleId":"121","severity":1,"message":"147","line":13,"column":7,"nodeType":"123","messageId":"124","endLine":13,"endColumn":17},{"ruleId":"121","severity":1,"message":"148","line":14,"column":7,"nodeType":"123","messageId":"124","endLine":14,"endColumn":18},{"ruleId":"121","severity":1,"message":"154","line":73,"column":23,"nodeType":"123","messageId":"124","endLine":73,"endColumn":37},{"ruleId":"121","severity":1,"message":"155","line":91,"column":23,"nodeType":"123","messageId":"124","endLine":91,"endColumn":37},{"ruleId":"121","severity":1,"message":"128","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"130","line":2,"column":15,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"156","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":16},{"ruleId":"121","severity":1,"message":"157","line":5,"column":28,"nodeType":"123","messageId":"124","endLine":5,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":43,"column":9,"nodeType":"143","endLine":43,"endColumn":42},{"ruleId":"160","severity":1,"message":"161","line":37,"column":1,"nodeType":"162","endLine":37,"endColumn":34},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'AutoComplete' is defined but never used.","'Cascader' is defined but never used.","'Checkbox' is defined but never used.","'Col' is defined but never used.","'InputNumber' is defined but never used.","'Row' is defined but never used.","'Select' is defined but never used.","'autoCompleteResult' is assigned a value but never used.","'setAutoCompleteResult' is assigned a value but never used.","'validatePassword' is assigned a value but never used.","'Statistic' is defined but never used.","'Router' is defined but never used.","'setUserdata' is assigned a value but never used.","'Link' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'RangePicker' is assigned a value but never used.","'dateFormat' is assigned a value but never used.","'weekFormat' is assigned a value but never used.","'monthFormat' is assigned a value but never used.","'dateFormatList' is assigned a value but never used.","'date' is assigned a value but never used.","'items' is assigned a value but never used.","'setTags' is assigned a value but never used.","'setFormLayout' is assigned a value but never used.","'setUnitOptions' is assigned a value but never used.","'setShopOptions' is assigned a value but never used.","'Button' is defined but never used.","'Space' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]