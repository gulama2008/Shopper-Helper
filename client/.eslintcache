[{"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/index.js":"1","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/App.js":"2","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/Signup.js":"3","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/MainContainer.js":"4","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/Login.js":"5","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Navbar.js":"6","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/ShoppingList.js":"7","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/ItemTags.js":"8","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/InputItem.js":"9","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/CreateNewList.js":"10","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/HistoricalList/HistoricalList.js":"11","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Statistics/Statistics.js":"12","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Settings/Settings.js":"13","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Header/Header.js":"14","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/utils/mutations.js":"15","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/utils/auth.js":"16","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/utils/queries.js":"17","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Settings/Items.js":"18","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Settings/Shops.js":"19"},{"size":197,"mtime":1682586494006,"results":"20","hashOfConfig":"21"},{"size":1688,"mtime":1682645147214,"results":"22","hashOfConfig":"21"},{"size":4988,"mtime":1682477892653,"results":"23","hashOfConfig":"21"},{"size":3052,"mtime":1682649012418,"results":"24","hashOfConfig":"21"},{"size":5887,"mtime":1682475106229,"results":"25","hashOfConfig":"21"},{"size":4551,"mtime":1682645493347,"results":"26","hashOfConfig":"21"},{"size":9858,"mtime":1682565992747,"results":"27","hashOfConfig":"21"},{"size":759,"mtime":1682513909502,"results":"28","hashOfConfig":"21"},{"size":2578,"mtime":1682516162415,"results":"29","hashOfConfig":"21"},{"size":3819,"mtime":1682568520921,"results":"30","hashOfConfig":"21"},{"size":3901,"mtime":1682591541666,"results":"31","hashOfConfig":"21"},{"size":131,"mtime":1681564420427,"results":"32","hashOfConfig":"21"},{"size":662,"mtime":1682650809339,"results":"33","hashOfConfig":"21"},{"size":1382,"mtime":1682342562441,"results":"34","hashOfConfig":"21"},{"size":1097,"mtime":1682488850674,"results":"35","hashOfConfig":"21"},{"size":720,"mtime":1682334214841,"results":"36","hashOfConfig":"21"},{"size":976,"mtime":1682559955285,"results":"37","hashOfConfig":"21"},{"size":5085,"mtime":1682648421049,"results":"38","hashOfConfig":"21"},{"size":3922,"mtime":1682651315577,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wvt2pe",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/index.js",[],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/App.js",[],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/Signup.js",["90","91","92","93","94","95","96","97","98"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport {\n  AutoComplete,\n  Button,\n  Cascader,\n  Checkbox,\n  Col,\n  Form,\n  Input,\n  InputNumber,\n  Row,\n  Select,\n} from \"antd\";\nimport \"../styles/Register.css\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 10,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 10,\n    },\n  },\n};\nconst Signup = () => {\n  const [form] = Form.useForm();\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleUsernameChange = (event) => {\n    const value = event.target.value;\n    setFormState({\n      ...formState,\n      username: value,\n    });\n    console.log(formState);\n  };\n  const handlePasswordChange = (event) => {\n    const value = event.target.value;\n    setFormState({\n      ...formState,\n      password: value,\n    });\n    console.log(formState);\n  };\n  const handleEmailChange = (event) => {\n    const value = event.target.value;\n    setFormState({\n      ...formState,\n      email: value,\n    });\n    console.log(formState);\n  };\n\n  const handleButtonClick = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n      console.log(data);\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      username: \"\",\n      password: \"\",\n    });\n  };\n  // const handleChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setFormState({\n  //     ...formState,\n  //     [name]: value,\n  //   });\n  // };\n\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  // const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n  // const validatePassword = (password) => {};\n  return (\n    <div className=\"register-container\">\n      <Form\n        className=\"register-form\"\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        style={{\n          maxWidth: 600,\n        }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"username\"\n          label=\"Username\"\n          tooltip=\"What do you want others to call you?\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n              whitespace: true,\n            },\n            // {\n            //   unique: true,\n            //   message: \"This username already exist!\",\n            //   whitespace: true,\n            // },\n          ]}\n        >\n          <Input onChange={handleUsernameChange} />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[\n            {\n              type: \"email\",\n              message: \"The input is not valid E-mail!\",\n            },\n            {\n              required: true,\n              message: \"Please input your E-mail!\",\n            },\n          ]}\n        >\n          <Input onChange={handleEmailChange} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n            {\n              min: 3,\n              message: \"Must be at least 8 characters!\",\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password onChange={handlePasswordChange} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"confirm\"\n          label=\"Confirm Password\"\n          dependencies={[\"password\"]}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: \"Please confirm your password!\",\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(\"The two passwords that you entered do not match!\")\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" onClick={handleButtonClick}>\n            Register\n          </Button>\n          Or <Link to={\"/login\"}>Login now!</Link>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\nexport default Signup;\n",["99","100"],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/MainContainer.js",["101","102","103","104","105"],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/pages/Login.js",["106","107"],"import { Button, Checkbox, Form, Input } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport \"../styles/Login.css\"\n\nconst onFinish = (values) => {\n  console.log(\"Success:\", values);\n};\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ username: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleUsernameChange = (event) => {\n    const value  = event.target.value;\n    setFormState({\n      ...formState,\n      username: value,\n    });\n    console.log(formState);\n  };\n\n  const handlePasswordChange = (event) => {\n    const value = event.target.value;\n    setFormState({\n      ...formState,\n      password: value,\n    });\n    console.log(formState);\n  };\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      username: \"\",\n      password: \"\",\n    });\n  };\n  return (\n    <div className=\"login-container\">\n      <Form\n        className=\"login-form\"\n        name=\"basic\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n        style={{\n          maxWidth: 600,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input onChange={handleUsernameChange}/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password onChange={handlePasswordChange}/>\n        </Form.Item>\n\n        <Form.Item\n          name=\"remember\"\n          valuePropName=\"checked\"\n          wrapperCol={{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item\n          wrapperCol={{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\" onClick={handleFormSubmit}>\n            Submit\n          </Button>\n          <div className=\"register-container\">\n            Or <Link to={\"/signup\"}>Register now!</Link>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n    \nexport default Login;\n\n// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import { useMutation } from '@apollo/client';\n// import { LOGIN_USER } from '../utils/mutations';\n\n// import Auth from '../utils/auth';\n\n// const Login = (props) => {\n//   const [formState, setFormState] = useState({ email: '', password: '' });\n//   const [login, { error, data }] = useMutation(LOGIN_USER);\n\n//   // update state based on form input changes\n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n\n//     setFormState({\n//       ...formState,\n//       [name]: value,\n//     });\n//   };\n\n//   // submit form\n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n//     console.log(formState);\n//     try {\n//       const { data } = await login({\n//         variables: { ...formState },\n//       });\n\n//       Auth.login(data.login.token);\n//     } catch (e) {\n//       console.error(e);\n//     }\n\n//     // clear form values\n//     setFormState({\n//       email: '',\n//       password: '',\n//     });\n//   };\n\n//   return (\n//     <main className=\"flex-row justify-center mb-4\">\n//       <div className=\"col-12 col-lg-10\">\n//         <div className=\"card\">\n//           <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n//           <div className=\"card-body\">\n//             {data ? (\n//               <p>\n//                 Success! You may now head{' '}\n//                 <Link to=\"/\">back to the homepage.</Link>\n//               </p>\n//             ) : (\n//               <form onSubmit={handleFormSubmit}>\n//                 <input\n//                   className=\"form-input\"\n//                   placeholder=\"Your email\"\n//                   name=\"email\"\n//                   type=\"email\"\n//                   value={formState.email}\n//                   onChange={handleChange}\n//                 />\n//                 <input\n//                   className=\"form-input\"\n//                   placeholder=\"******\"\n//                   name=\"password\"\n//                   type=\"password\"\n//                   value={formState.password}\n//                   onChange={handleChange}\n//                 />\n//                 <button\n//                   className=\"btn btn-block btn-info\"\n//                   style={{ cursor: 'pointer' }}\n//                   type=\"submit\"\n//                 >\n//                   Submit\n//                 </button>\n//               </form>\n//             )}\n\n//             {error && (\n//               <div className=\"my-3 p-3 bg-danger text-white\">\n//                 {error.message}\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </main>\n//   );\n// };\n\n// export default Login;\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Navbar.js",["108"],"import React, { useState } from \"react\";\nimport {\n  ProfileOutlined,\n  FileSearchOutlined,\n  BarChartOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport \"../../styles/Navbar.css\"\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  //get the props passing from component App\n  const { currentPage, handlePageChange } = props;\n  const [mouseEnter, setMouseEnter] = useState(\"\");\n  \n  const handleMouseEnter = (title) => {\n    setMouseEnter(title);\n  };\n  const handleMouseLeave = () => { \n    setMouseEnter(\"\");\n  }\n\n  return (\n    <div className=\"navbar-container\">\n      <ul className=\"navbar\">\n        <li\n          className=\"navbar-item\"\n          onClick={() => {\n            handlePageChange(\"CreateNewList\");\n          }}\n          onMouseEnter={() => {\n            handleMouseEnter(\"CreateNewList\");\n          }}\n          onMouseLeave={handleMouseLeave}\n          style={{\n            backgroundColor:\n              window.location.pathname === \"/\"\n                ? \"rgb(40, 40, 93)\"\n                : mouseEnter === \"CreateNewList\"\n                ? \"rgb(70, 70, 214)\"\n                : \"rgba(0, 22, 40, 255)\",\n          }}\n        >\n          <Link\n            to={\"/\"}\n            className=\"navbar-anchor\"\n            style={{\n              color:\n                window.location.pathname === \"/\"\n                  ? \"white\"\n                  : \"rgba(140, 150, 159, 255)\",\n            }}\n          >\n            <ProfileOutlined />\n            <span className=\"navbar-item-title\">Create New List</span>\n          </Link>\n        </li>\n        <li\n          className=\"navbar-item\"\n          onClick={() => {\n            handlePageChange(\"HistoricalList\");\n          }}\n          onMouseEnter={() => {\n            handleMouseEnter(\"HistoricalList\");\n          }}\n          onMouseLeave={handleMouseLeave}\n          style={{\n            backgroundColor:\n              window.location.pathname === \"/historical-list\"\n                ? \"rgb(40, 40, 93)\"\n                : mouseEnter === \"HistoricalList\"\n                ? \"rgb(70, 70, 214)\"\n                : \"rgba(0, 22, 40, 255)\",\n          }}\n        >\n          <Link\n            to={\"/historical-list\"}\n            className=\"navbar-anchor\"\n            style={{\n              color:\n                window.location.pathname === \"/historical-list\"\n                  ? \"white\"\n                  : \"rgba(140, 150, 159, 255)\",\n            }}\n          >\n            <FileSearchOutlined />\n            <span className=\"navbar-item-title\">Historical List</span>\n          </Link>\n        </li>\n        <li\n          className=\"navbar-item\"\n          onClick={() => {\n            handlePageChange(\"Statistics\");\n          }}\n          onMouseEnter={() => {\n            handleMouseEnter(\"Statistics\");\n          }}\n          onMouseLeave={handleMouseLeave}\n          style={{\n            backgroundColor:\n              window.location.pathname === \"/statistics\"\n                ? \"rgb(40, 40, 93)\"\n                : mouseEnter === \"Statistics\"\n                ? \"rgb(70, 70, 214)\"\n                : \"rgba(0, 22, 40, 255)\",\n          }}\n        >\n          <Link\n            to={\"/statistics\"}\n            className=\"navbar-anchor\"\n            style={{\n              color:\n                window.location.pathname === \"/statistics\"\n                  ? \"white\"\n                  : \"rgba(140, 150, 159, 255)\",\n            }}\n          >\n            <BarChartOutlined />\n            <span className=\"navbar-item-title\">Statistics</span>\n          </Link>\n        </li>\n        <li\n          className=\"navbar-item\"\n          onClick={() => {\n            handlePageChange(\"Settings\");\n          }}\n          onMouseEnter={() => {\n            handleMouseEnter(\"Settings\");\n          }}\n          onMouseLeave={handleMouseLeave}\n          style={{\n            backgroundColor:\n              window.location.pathname === \"/settings\"\n                ? \"rgb(40, 40, 93)\"\n                : mouseEnter === \"Settings\"\n                ? \"rgb(70, 70, 214)\"\n                : \"rgba(0, 22, 40, 255)\",\n          }}\n        >\n          <Link\n            to={\"/settings\"}\n            className=\"navbar-anchor\"\n            style={{\n              color:\n                window.location.pathname === \"/settings\"\n                  ? \"white\"\n                  : \"rgba(140, 150, 159, 255)\",\n            }}\n          >\n            <SettingOutlined />\n            <span className=\"navbar-item-title\">Settings</span>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/ShoppingList.js",["109","110","111","112","113","114","115"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_LIST } from \"../../../utils/mutations\";\nimport Auth from \"../../../utils/auth\";\nimport {\n  Col,\n  Divider,\n  Row,\n  InputNumber,\n  Select,\n  Typography,\n  Button,\n  Input,\n  Empty,\n} from \"antd\";\nimport { CloseOutlined} from \"@ant-design/icons\";\nimport \"../../../styles/ShoppingList.css\";\n\nconst { Text} = Typography;\n\nconst ShoppingList = (props) => {\n  const { items, deleteItems,updateItem, unitOptions, shopOptions,date,clickSubmit,handleClickSubmit } = props;\n  const [size, setSize] = useState(\"large\"); \n  const [addList, { error, data }] = useMutation(ADD_LIST);\n\n  console.log(clickSubmit);\n  //change the quantity of each item in the state into the quantity entered in the input box\n  const handleQuantityChange = (index) => {\n    return (e) => {\n      const newItemList = items.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          item.quantity = e;\n          return item;\n        } else {\n          return item;\n        }\n      });\n      updateItem(newItemList);\n    };\n  };\n\n  //change the unit of each item in the state into the unit chosen from the select box\n  const handleUnitChange = (index) => {\n    return (e) => {\n      const newItemList = items.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          item.unit = e;\n          return item;\n        } else {\n          return item;\n        }\n      });\n      updateItem(newItemList);\n      \n    };\n  };\n\n  //change the shop of each item in the state into the shop chosen from the select box\n  const handleShopChange = (index) => {\n    return (e) => {\n      const newItemList = items.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          item.shop = e;\n          return item;\n        } else {\n          return item;\n        }\n      });\n      updateItem(newItemList);\n    };\n  };\n\n  //change the price of each item in the state into the price entered in the input box\n  const handlePriceChange = (index) => {\n    return (e) => {\n      const newItemList = items.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          item.price = e;\n          return item;\n        } else {\n          return item;\n        }\n      });\n      updateItem(newItemList);\n    };\n  };\n\n  //change the status of each item in the state into bought or pending when clicking the button\n  const handleStatusButton = (index) => {\n    const newItemList = items.map((item, itemIndex) => {\n      if (itemIndex === index) {\n        item.bought = !item.bought;\n        return item;\n      } else {\n        return item;\n      }\n    });\n    updateItem(newItemList);\n  };\n\n  //delete the item from the state when click the delete icon\n  const handleDeleteButton = (index) => {\n    const newItemList = items.filter((item, itemIndex) => {\n      return itemIndex !== index;\n    });\n    updateItem(newItemList);\n  };\n\n  const handleSubmitButton = async (event) => {\n    event.preventDefault();\n    console.log(items);\n    const username = Auth.getProfile().data.username;\n    console.log(username);\n    try {\n      const { data } = await addList({\n        variables: {\n          username: username,\n          lists:items\n        },\n      });\nconsole.log(222);\n      deleteItems();\n      window.location.reload();\n      // handleClickSubmit();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <Row\n          className=\"title-row\"\n          gutter={{\n            xs: 8,\n            sm: 16,\n            md: 24,\n            lg: 32,\n          }}\n        >\n          <Col className=\"gutter-row title-col\" span={3}>\n            <div className=\"\">\n              <Text strong className=\"title-text\">\n                Item\n              </Text>\n            </div>\n          </Col>\n\n          <Col className=\"gutter-row title-col\" span={3}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Quantity\n              </Text>\n            </div>\n          </Col>\n          <Col className=\"gutter-row title-col\" span={3}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Unit\n              </Text>\n            </div>\n          </Col>\n          <Col className=\"gutter-row title-col\" span={4}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Shop\n              </Text>\n            </div>\n          </Col>\n          <Col className=\"gutter-row title-col\" span={3}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Unit Price\n              </Text>\n            </div>\n          </Col>\n          <Col className=\"gutter-row title-col\" span={3}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Total Price\n              </Text>\n            </div>\n          </Col>\n          <Col className=\"gutter-row title-col\" span={4}>\n            <Divider type=\"vertical\" className=\"title-divider\" />\n            <div>\n              <Text strong className=\"title-text\">\n                Action\n              </Text>\n            </div>\n          </Col>\n        </Row>\n      </div>\n      {items.length ? (\n        <>\n          <div>\n            {items.map((item, index) => {\n              return (\n                <Row\n                  key={item.id}\n                  className=\"content-row\"\n                  gutter={{\n                    xs: 8,\n                    sm: 16,\n                    md: 24,\n                    lg: 32,\n                  }}\n                >\n                  <Col className=\"gutter-row content-col-name\" span={3}>\n                    <div className=\"\">{item.name}</div>\n                  </Col>\n\n                  <Col className=\"gutter-row content-col\" span={3}>\n                    <Divider type=\"vertical\" className=\"content-divider\" />\n                    <div>\n                      <InputNumber\n                        min={1}\n                        value={item.quantity}\n                        onChange={handleQuantityChange(index)}\n                      />\n                    </div>\n                  </Col>\n                  <Col className=\"gutter-row content-col\" span={3}>\n                    <Divider type=\"vertical\" className=\"content-divider\" />\n                    <div>\n                      <Select\n                        defaultValue={item.unit}\n                        style={{\n                          width: 80,\n                        }}\n                        onChange={handleUnitChange(index)}\n                        options={unitOptions}\n                      />\n                    </div>\n                  </Col>\n                  <Col className=\"gutter-row content-col\" span={4}>\n                    <Divider type=\"vertical\" className=\"content-divider\" />\n                    <div>\n                      <Select\n                        defaultValue={item.shop}\n                        style={{\n                          width: 120,\n                        }}\n                        onChange={handleShopChange(index)}\n                        options={shopOptions}\n                      />\n                    </div>\n                  </Col>\n                  <Col className=\"gutter-row content-col\" span={3}>\n                    <Divider type=\"vertical\" className=\"content-divider\" />\n                    <div>\n                      <InputNumber\n                        value={item.price}\n                        onChange={handlePriceChange(index)}\n                      />\n                    </div>\n                  </Col>\n                  <Col className=\"gutter-row content-col-name\" span={3}>\n                    <Divider type=\"vertical\" className=\"content-divider\" />\n                    <div className=\"\">{item.quantity * item.price}</div>\n                  </Col>\n\n                  <Col className=\"gutter-row content-col\" span={4}>\n                    <Divider type=\"vertical\" className=\"content-divider\" />\n                    <div>\n                      <Button\n                        className=\"status-button\"\n                        type=\"primary\"\n                        onClick={() => {\n                          handleStatusButton(index);\n                        }}\n                        style={\n                          item.bought\n                            ? {\n                                backgroundColor: \"rgba(245,245,245,255)\",\n                                color: \"rgba(184,184,184,255)\",\n                              }\n                            : {\n                                backgroundColor: \"rgba(23,119,255,255)\",\n                                color: \"rgba(254,254,255,255)\",\n                              }\n                        }\n                      >\n                        {item.bought ? \"Bought\" : \"Pending\"}\n                      </Button>\n                      <CloseOutlined\n                        className=\"delete-icon\"\n                        onClick={() => {\n                          handleDeleteButton(index);\n                        }}\n                      />\n                    </div>\n                  </Col>\n                </Row>\n              );\n            })}\n          </div>\n          <div className=\"submit-btn-container\">\n            <Button type=\"primary\" size={size} onClick={handleSubmitButton}>\n              Submit\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Empty className=\"empty-list\" description={false} />\n      )}\n    </div>\n  );\n};\n\nexport default ShoppingList;\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/ItemTags.js",["116","117"],"import { Space, Tag } from \"antd\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"../../../styles/ItemTags.css\"\n\nfunction ItemTags(props) {\n  const { items,addItem,userItems,date}=props\n  const [tags, setTags] = useState(userItems);\nconsole.log(tags);\n  const handleTagClick = (e) => { \n    const item = tags.find((tag) => tag.name === e.target.innerText)\n    const newItem = {...item,date:date,bought:false}    \n    // item.date = date;\n    addItem(newItem);\n  } \n\n  return (\n    <Space size={[0, 8]} wrap>\n      { tags.length?(tags.map((tag) => { \n        return <Tag className=\"item-tag\" key={tag.id} onClick={handleTagClick}>{ tag.name}</Tag>\n      })):(<div>No pre-set items</div>)}\n      \n  </Space>)\n}\n  \nexport default ItemTags;\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/InputItem.js",["118","119","120"],"import { Button, Form, Input, Select, InputNumber } from \"antd\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst InputItem = (props) => {\n  const { items, addItem, unitOptions,shopOptions,userShops,date } =\n    props;\n  const [form] = Form.useForm();\n  const [formLayout, setFormLayout] = useState(\"inline\");\n\n  //set states for the current values in all form's areas\n  const [currentItemName, setCurrentItemName] = useState();\n  const [currentItemQuantity, setCurrentItemQuantity] = useState();\n  const [currentItemUnit, setCurrentItemUnit] = useState();\n  const [currentItemShop, setCurrentItemShop] = useState();\n\n\n  //handle functions when values changes in form's areas\n  const handleNameChange = (e) => { \n    setCurrentItemName(e.target.value);\n  }\n  const handleQuantityChange = (value) => {\n    setCurrentItemQuantity(value);\n  };\n  const handleUnitChange = (value) => {\n    setCurrentItemUnit(value);\n  };\n  const handleShopChange = (value) => {\n    setCurrentItemShop(value);\n  };\n\n  const handleAddButtonClick = (e) => { \n    e.preventDefault();\n    const newItem = {\n      name: currentItemName,\n      quantity: currentItemQuantity,\n      unit: currentItemUnit,\n      shop: currentItemShop,\n      price: 0,\n      date: date,\n      bought: false,\n    };\n    addItem(newItem);\n    console.log(newItem);\n  }\n  \n  \n  return (\n    <Form\n      layout={formLayout}\n      form={form}\n      initialValues={{\n        layout: formLayout,\n      }}\n      style={{}}\n    >\n      <Form.Item label=\"Item\">\n        <Input\n          placeholder=\"Please enter an item\"\n          // value={inputItemValue ? inputItemValue.name : currentItemName}\n          // value={ inputItemValue.name}\n          onChange={handleNameChange}\n        />\n      </Form.Item>\n      <Form.Item label=\"Quantity\">\n        <InputNumber\n          min={1}\n          placeholder=\"\"\n          style={{\n            width: 50,\n          }}\n          onChange={handleQuantityChange}\n        />\n      </Form.Item>\n      <Form.Item label=\"Unit\">\n        <Select\n          style={{\n            width: 80,\n          }}\n          onChange={handleUnitChange}\n          options={unitOptions}\n        />\n      </Form.Item>\n      <Form.Item label=\"Shop\">\n        <Select\n          style={{\n            width: 120,\n          }}\n          onChange={handleShopChange}\n          options={shopOptions}\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" onClick={handleAddButtonClick}>\n          Add\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nexport default InputItem;\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/CreateNewList/CreateNewList.js",["121","122","123","124","125","126","127","128","129"],"import React, { useState,useEffect } from \"react\";\nimport InputItem from \"./InputItem\";\nimport ItemTags from \"./ItemTags\";\nimport ShoppingList from \"./ShoppingList\";\nimport { Divider, Empty } from \"antd\";\nimport { DatePicker, Typography } from \"antd\";\nimport \"../../../styles/AddNewList.css\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { genTypeStyle } from \"antd/es/alert/style\";\ndayjs.extend(customParseFormat);\nconst { RangePicker } = DatePicker;\nconst dateFormat = \"DD/MM/YYYY\";\nconst weekFormat = \"DD/MM\";\nconst monthFormat = \"MM/YYYY\";\nconst { Text } = Typography;\nconst dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\", \"DD-MM-YYYY\", \"DD-MM-YY\"];\n\nexport default function CreateNewList(props) {\n  const { userItems,userShops,clickSubmit,handleClickSubmit } = props;\n  console.log(userItems);\n  const test = [\n    {\n      date: \"26/04/2023\",\n      name: \"Apple\",\n      quantity: 2,\n      unit: \"kg\",\n      shop: \"Woolworths\",\n      price: 0,\n      bought: false,\n    },\n    {\n      date: \"26/04/2023\",\n      name: \"Milk\",\n      quantity: 2,\n      unit: \"bottle\",\n      shop: \"Coles\",\n      price: 0,\n      bought: false,\n    },\n    {\n      date: \"26/04/2023\",\n      name: \"Egg\",\n      quantity: 1,\n      unit: \"box\",\n      shop: \"Aldi\",\n      price: 0,\n      bought: false,\n    },\n    {\n      date: \"26/04/2023\",\n      name: \"Tomato\",\n      quantity: 3,\n      unit: \"kg\",\n      shop: \"Woolworths\",\n      price: 0,\n      bought: false,\n    },\n    {\n      date: \"26/04/2023\",\n      name: \"Soap\",\n      quantity: 5,\n      unit: \"box\",\n      shop: \"Big W\",\n      price: 0,\n      bought: false,\n    },\n  ];\n  const [items, setItems] = useState([]);\n  const [date, setDate] = useState(dayjs().format(\"DD/MM/YYYY\"));\n  const [unitOptions, setUnitOptions] = useState([\n    {\n      value: \"kg\",\n      label: \"kg\",\n    },\n    {\n      value: \"bottle\",\n      label: \"bottle\",\n    },\n    {\n      value: \"box\",\n      label: \"box\",\n    },\n    {\n      value: \"bag\",\n      label: \"bag\",\n    },\n  ]);\n  const [shopOptions, setShopOptions] = useState([]);\n\n  useEffect(() => {\n    const shops = userShops.map((shop) => { \n      return {value:shop.name,label:shop.name}\n    })\n    setShopOptions(shops)\n  }, []);\n\n  const addItem = (item) => {\n    const newItemList = [...items, item];\n    setItems(newItemList);\n  };\n  const updateItem = (newItemList) => {\n    setItems(newItemList);\n  };\n\n  const deleteItems = () => { \n    setItems([]);\n  }\n\n  const handleDateChange = (date, dateString) => {\n    setDate(dateString);\n    const newItemList = items.map((item) => {\n      item.date = dateString;\n      return item;\n    });\n    updateItem(newItemList);\n  };\n\n  return (\n    <div className=\"addnewlist-container\">\n      <div>\n        <InputItem\n          items={items}\n          addItem={addItem}\n          unitOptions={unitOptions}\n          shopOptions={shopOptions}\n          date={date}\n          userShops={userShops}\n        />\n        <Text strong className=\"choose-item-text\">\n          Or choose one item from the following tags\n        </Text>\n        <ItemTags\n          items={items}\n          addItem={addItem}\n          userItems={userItems}\n          date={date}\n        />\n      </div>\n      <Divider />\n      <div className=\"date-picker\">\n        <DatePicker\n          defaultValue={dayjs()}\n          format={dateFormatList}\n          onChange={handleDateChange}\n        />\n      </div>\n      <div>\n        <ShoppingList\n          items={items}\n          deleteItems={deleteItems}\n          updateItem={updateItem}\n          unitOptions={unitOptions}\n          shopOptions={shopOptions}\n          userShops={userShops}\n          date={date}\n          clickSubmit={clickSubmit}\n          handleClickSubmit={handleClickSubmit}\n        />\n      </div>\n    </div>\n  );\n}\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/HistoricalList/HistoricalList.js",["130","131"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Collapse } from \"antd\";\nimport { Table, Typography } from \"antd\";\nimport { DatePicker, Space, Input } from \"antd\";\nimport { SearchOutlined } from '@ant-design/icons';\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\ndayjs.extend(customParseFormat);\nconst { Text } = Typography;\nconst { RangePicker } = DatePicker;\nconst { Search } = Input;\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"Quantity\",\n    dataIndex: \"quantity\",\n  },\n  {\n    title: \"Unit\",\n    dataIndex: \"unit\",\n  },\n  {\n    title: \"Shop\",\n    dataIndex: \"shop\",\n  },\n  {\n    title: \"Unit Price\",\n    dataIndex: \"price\",\n  },\n  {\n    title: \"Total Price\",\n    dataIndex: \"totalPrice\",\n  },\n];\nconst { Panel } = Collapse;\n\nexport default function HistoricalList(props) {\n  const { userLists } = props;\n\n  //change userLists into new array of objs with different property date and lists\n  const groups = userLists.reduce((groups, list) => {\n    const date = list.date;\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(list);\n    return groups;\n  }, {});\n  const groupArrays = Object.keys(groups).map((date) => {\n    return {\n      date,\n      lists: groups[date],\n    };\n  });\n\n  const [resultList, setResultList] = useState([]);\n  const [ dateRange, setDateRange ] = useState([]);\n  console.log(userLists);\n\n  const handleDateRangeChange = (date,dateString) => { \n    setDateRange([dateString[0], dateString[1]]);\n  }\n\n  const handleShowAllButtonClick = (e) => { \n    e.preventDefault(e);\n    setResultList(groupArrays);\n  }\n\n  const handleSearchButtonClick = (e) => { \n    e.preventDefault();\n    const resultArray = groupArrays.filter((element) => { \n      console.log(element.date);\n      const elementDate = dayjs(element.date,\"DD-MM-YYYY\");\n      const dateRangeStart = dayjs(dateRange[0], \"DD-MM-YYYY\");\n      const dateRangeFinish = dayjs(dateRange[1], \"DD-MM-YYYY\");\n      return elementDate >= dateRangeStart && elementDate <= dateRangeFinish;\n    })\n    console.log(resultArray);\n    setResultList(resultArray);\n  }\n  console.log(dateRange);\n  \n  console.log(groupArrays);\n\n  return (\n    <div>\n      <div>\n        <Space direction=\"vertical\" size={12}>\n          <Button type=\"primary\" onClick={handleShowAllButtonClick}>Show All Lists</Button>\n          <span>Time Range</span>\n          <RangePicker format=\"DD/MM/YYYY\" onChange={handleDateRangeChange} />\n          <Button\n            type=\"primary\"\n            icon={<SearchOutlined />}\n            onClick={handleSearchButtonClick}\n          >\n            Search\n          </Button>\n        </Space>\n      </div>\n      {resultList.map((e) => {\n        return (\n          <div>\n            <Collapse defaultActiveKey={\"\"}>\n              <Panel header={e.date} key={e.date}>\n                <Table\n                  columns={columns}\n                  dataSource={e.lists}\n                  pagination={false}\n                  bordered\n                  summary={(pageData) => {\n                    let total = 0;\n                    pageData.forEach(({ totalPrice }) => {\n                      total += totalPrice;\n                    });\n                    return (\n                      <>\n                        <Table.Summary.Row>\n                          <Table.Summary.Cell index={0} colSpan={5}>\n                            Total\n                          </Table.Summary.Cell>\n                          <Table.Summary.Cell index={2}>\n                            <Text type=\"danger\">{total}</Text>\n                          </Table.Summary.Cell>\n                        </Table.Summary.Row>\n                      </>\n                    );\n                  }}\n                />\n              </Panel>\n            </Collapse>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Statistics/Statistics.js",[],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Settings/Settings.js",["132","133","134"],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Header/Header.js",["135","136","137","138","139"],"import React from \"react\";\nimport { Col, Row } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { Avatar } from \"antd\";\nimport { Button, Dropdown, Space } from \"antd\";\nimport \"../../../styles/Header.css\";\nimport logo from \"../../../images/logo.png\"\nimport { Link } from \"react-router-dom\";\n\nexport default function Header(props) {\n  const { userData } = props;\n  const handleSignout = () => { \n    localStorage.removeItem(\"id_token\");\n  }\n  const items = [\n    {\n      key: \"1\",\n      label: (\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.antgroup.com\"\n        >\n          Profile\n        </a>\n      ),\n    },\n    {\n      key: \"2\",\n      label: (\n        <Link\n          to={\"/login\"}\n          onClick={ handleSignout}\n        >\n          Sign out\n        </Link>\n      ),\n    },\n  ];\n  return (\n    <div className=\"header-container\">\n      <div className=\"logo-container\">\n        <img src={logo} className=\"logo\"></img>\n        <span className=\"app-name\">Shopper Helper</span>\n      </div>\n      <div className=\"user-container\">\n        <span>Welcome back, { userData.username}</span>\n        <Dropdown\n          menu={{\n            items,\n          }}\n          placement=\"bottomLeft\"\n        >\n          <Avatar size={64} icon={<UserOutlined />} />\n        </Dropdown>\n      </div>\n    </div>\n  );\n}\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/utils/mutations.js",[],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/utils/auth.js",["140"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/utils/queries.js",[],"/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Settings/Items.js",["141","142","143","144","145","146","147","148","149"],"import {\n  Form,\n  Button,\n  InputNumber,\n  Popconfirm,\n  Table,\n  Typography,\n  Input,\n  Select,\n} from \"antd\";\n\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { Space, Tag, Tooltip, theme } from \"antd\";\nimport { useEffect, useRef, useState } from \"react\";\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode =\n    inputType === \"number\" ? (\n      <InputNumber />\n    ) : inputType === \"text\" ? (\n      <Input />\n    ) : (\n      <Select />\n    );\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\nconst Items = (props) => {\n  const { userItems, userShops } = props;\n  console.log(userItems);\n  console.log(userShops);\n\n  const [form] = Form.useForm();\n  const [dataSource, setDataSource] = useState(userItems);\n  const [count, setCount] = useState(2);\n  const [data, setData] = useState(userItems);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const isEditing = (record) => record.name === editingKey;\n  const edit = (record) => {\n    form.setFieldsValue({\n      name: \"\",\n      quantity: \"\",\n      unit: \"\",\n      shop: \"\",\n      price: \"\",\n      ...record,\n    });\n    setEditingKey(record.name);\n  };\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n  const save = async (key) => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex((item) => key === item.name);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        setData(newData);\n        setEditingKey(\"\");\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n  const columns = [\n    {\n      title: \"name\",\n      dataIndex: \"name\",\n      width: \"20%\",\n      editable: true,\n    },\n    {\n      title: \"quantity\",\n      dataIndex: \"quantity\",\n      width: \"5%\",\n      editable: true,\n    },\n    {\n      title: \"unit\",\n      dataIndex: \"unit\",\n      width: \"5%\",\n      editable: true,\n    },\n    {\n      title: \"shop\",\n      dataIndex: \"shop\",\n      width: \"15%\",\n      editable: true,\n    },\n    {\n      title: \"price\",\n      dataIndex: \"price\",\n      width: \"5%\",\n      editable: true,\n    },\n    {\n      title: \"operation\",\n      dataIndex: \"operation\",\n      width: \"15%\",\n      render: (_, record) => {\n        const editable = isEditing(record);\n        return (\n          <>\n            {editable ? (\n              <span>\n                <Typography.Link\n                  onClick={() => save(record.name)}\n                  style={{\n                    marginRight: 8,\n                  }}\n                >\n                  Save\n                </Typography.Link>\n                <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n                  <a>Cancel</a>\n                </Popconfirm>\n              </span>\n            ) : (\n              <Typography.Link\n                disabled={editingKey !== \"\"}\n                onClick={() => edit(record)}\n              >\n                Edit\n              </Typography.Link>\n            )}\n            <a\n              style={{\n                marginLeft: 8,\n              }}\n            >\n              Delete\n            </a>\n          </>\n        );\n      },\n    },\n  ];\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType:\n          col.dataIndex === \"quantity\"\n            ? \"number\"\n            : col.dataIndex === \"price\"\n            ? \"number\"\n            : col.dataIndex === \"name\"\n            ? \"text\"\n            : \"select\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n  const handleAdd = () => {\n    const newData = {\n      key: count,\n      name: `Edward King ${count}`,\n      age: \"32\",\n      address: `London, Park Lane no. ${count}`,\n    };\n    setDataSource([...dataSource, newData]);\n    setCount(count + 1);\n  };\n  return (\n    <Form form={form} component={false}>\n      <Button\n        onClick={handleAdd}\n        type=\"primary\"\n        style={{\n          marginBottom: 16,\n        }}\n      >\n        Add a row\n      </Button>\n      <Table\n        components={{\n          body: {\n            cell: EditableCell,\n          },\n        }}\n        bordered\n        dataSource={data}\n        columns={mergedColumns}\n        rowClassName=\"editable-row\"\n        pagination={{\n          onChange: cancel,\n        }}\n      />\n    </Form>\n  );\n};\nexport default Items;\n","/Users/siyuliu/bootcamp/project/project-3/Shopper-Helper/client/src/components/MainContainer/Settings/Shops.js",[],{"ruleId":"150","severity":1,"message":"151","line":7,"column":3,"nodeType":"152","messageId":"153","endLine":7,"endColumn":15},{"ruleId":"150","severity":1,"message":"154","line":9,"column":3,"nodeType":"152","messageId":"153","endLine":9,"endColumn":11},{"ruleId":"150","severity":1,"message":"155","line":10,"column":3,"nodeType":"152","messageId":"153","endLine":10,"endColumn":11},{"ruleId":"150","severity":1,"message":"156","line":11,"column":3,"nodeType":"152","messageId":"153","endLine":11,"endColumn":6},{"ruleId":"150","severity":1,"message":"157","line":14,"column":3,"nodeType":"152","messageId":"153","endLine":14,"endColumn":14},{"ruleId":"150","severity":1,"message":"158","line":15,"column":3,"nodeType":"152","messageId":"153","endLine":15,"endColumn":6},{"ruleId":"150","severity":1,"message":"159","line":16,"column":3,"nodeType":"152","messageId":"153","endLine":16,"endColumn":9},{"ruleId":"150","severity":1,"message":"160","line":57,"column":21,"nodeType":"152","messageId":"153","endLine":57,"endColumn":26},{"ruleId":"150","severity":1,"message":"161","line":57,"column":28,"nodeType":"152","messageId":"153","endLine":57,"endColumn":32},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"150","severity":1,"message":"166","line":10,"column":27,"nodeType":"152","messageId":"153","endLine":10,"endColumn":33},{"ruleId":"150","severity":1,"message":"167","line":12,"column":10,"nodeType":"152","messageId":"153","endLine":12,"endColumn":18},{"ruleId":"150","severity":1,"message":"168","line":12,"column":32,"nodeType":"152","messageId":"153","endLine":12,"endColumn":42},{"ruleId":"150","severity":1,"message":"169","line":20,"column":20,"nodeType":"152","messageId":"153","endLine":20,"endColumn":31},{"ruleId":"170","severity":1,"message":"171","line":39,"column":5,"nodeType":"152","messageId":"172","endLine":39,"endColumn":18},{"ruleId":"150","severity":1,"message":"160","line":17,"column":19,"nodeType":"152","messageId":"153","endLine":17,"endColumn":24},{"ruleId":"150","severity":1,"message":"161","line":17,"column":26,"nodeType":"152","messageId":"153","endLine":17,"endColumn":30},{"ruleId":"150","severity":1,"message":"173","line":13,"column":11,"nodeType":"152","messageId":"153","endLine":13,"endColumn":22},{"ruleId":"150","severity":1,"message":"174","line":13,"column":3,"nodeType":"152","messageId":"153","endLine":13,"endColumn":8},{"ruleId":"150","severity":1,"message":"175","line":22,"column":67,"nodeType":"152","messageId":"153","endLine":22,"endColumn":71},{"ruleId":"150","severity":1,"message":"176","line":22,"column":84,"nodeType":"152","messageId":"153","endLine":22,"endColumn":101},{"ruleId":"150","severity":1,"message":"177","line":23,"column":16,"nodeType":"152","messageId":"153","endLine":23,"endColumn":23},{"ruleId":"150","severity":1,"message":"160","line":24,"column":21,"nodeType":"152","messageId":"153","endLine":24,"endColumn":26},{"ruleId":"150","severity":1,"message":"161","line":24,"column":28,"nodeType":"152","messageId":"153","endLine":24,"endColumn":32},{"ruleId":"150","severity":1,"message":"161","line":115,"column":15,"nodeType":"152","messageId":"153","endLine":115,"endColumn":19},{"ruleId":"150","severity":1,"message":"178","line":7,"column":11,"nodeType":"152","messageId":"153","endLine":7,"endColumn":16},{"ruleId":"150","severity":1,"message":"179","line":8,"column":16,"nodeType":"152","messageId":"153","endLine":8,"endColumn":23},{"ruleId":"150","severity":1,"message":"178","line":6,"column":11,"nodeType":"152","messageId":"153","endLine":6,"endColumn":16},{"ruleId":"150","severity":1,"message":"180","line":6,"column":51,"nodeType":"152","messageId":"153","endLine":6,"endColumn":60},{"ruleId":"150","severity":1,"message":"181","line":9,"column":22,"nodeType":"152","messageId":"153","endLine":9,"endColumn":35},{"ruleId":"150","severity":1,"message":"182","line":5,"column":19,"nodeType":"152","messageId":"153","endLine":5,"endColumn":24},{"ruleId":"150","severity":1,"message":"183","line":10,"column":10,"nodeType":"152","messageId":"153","endLine":10,"endColumn":22},{"ruleId":"150","severity":1,"message":"184","line":12,"column":9,"nodeType":"152","messageId":"153","endLine":12,"endColumn":20},{"ruleId":"150","severity":1,"message":"185","line":13,"column":7,"nodeType":"152","messageId":"153","endLine":13,"endColumn":17},{"ruleId":"150","severity":1,"message":"186","line":14,"column":7,"nodeType":"152","messageId":"153","endLine":14,"endColumn":17},{"ruleId":"150","severity":1,"message":"187","line":15,"column":7,"nodeType":"152","messageId":"153","endLine":15,"endColumn":18},{"ruleId":"150","severity":1,"message":"188","line":22,"column":9,"nodeType":"152","messageId":"153","endLine":22,"endColumn":13},{"ruleId":"150","severity":1,"message":"189","line":71,"column":23,"nodeType":"152","messageId":"153","endLine":71,"endColumn":37},{"ruleId":"190","severity":1,"message":"191","line":96,"column":6,"nodeType":"192","endLine":96,"endColumn":8,"suggestions":"193"},{"ruleId":"150","severity":1,"message":"194","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"195","line":11,"column":9,"nodeType":"152","messageId":"153","endLine":11,"endColumn":15},{"ruleId":"150","severity":1,"message":"196","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":12},{"ruleId":"150","severity":1,"message":"197","line":2,"column":17,"nodeType":"152","messageId":"153","endLine":2,"endColumn":25},{"ruleId":"150","severity":1,"message":"194","line":2,"column":27,"nodeType":"152","messageId":"153","endLine":2,"endColumn":36},{"ruleId":"150","severity":1,"message":"156","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"158","line":2,"column":15,"nodeType":"152","messageId":"153","endLine":2,"endColumn":18},{"ruleId":"150","severity":1,"message":"198","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":16},{"ruleId":"150","severity":1,"message":"199","line":5,"column":28,"nodeType":"152","messageId":"153","endLine":5,"endColumn":33},{"ruleId":"200","severity":1,"message":"201","line":43,"column":9,"nodeType":"202","endLine":43,"endColumn":42},{"ruleId":"203","severity":1,"message":"204","line":37,"column":1,"nodeType":"205","endLine":37,"endColumn":34},{"ruleId":"150","severity":1,"message":"206","line":12,"column":10,"nodeType":"152","messageId":"153","endLine":12,"endColumn":22},{"ruleId":"150","severity":1,"message":"199","line":13,"column":10,"nodeType":"152","messageId":"153","endLine":13,"endColumn":15},{"ruleId":"150","severity":1,"message":"207","line":13,"column":17,"nodeType":"152","messageId":"153","endLine":13,"endColumn":20},{"ruleId":"150","severity":1,"message":"208","line":13,"column":22,"nodeType":"152","messageId":"153","endLine":13,"endColumn":29},{"ruleId":"150","severity":1,"message":"209","line":13,"column":31,"nodeType":"152","messageId":"153","endLine":13,"endColumn":36},{"ruleId":"150","severity":1,"message":"194","line":14,"column":10,"nodeType":"152","messageId":"153","endLine":14,"endColumn":19},{"ruleId":"150","severity":1,"message":"210","line":14,"column":21,"nodeType":"152","messageId":"153","endLine":14,"endColumn":27},{"ruleId":"211","severity":1,"message":"212","line":154,"column":19,"nodeType":"202","endLine":154,"endColumn":22},{"ruleId":"211","severity":1,"message":"212","line":165,"column":13,"nodeType":"202","endLine":169,"endColumn":14},"no-unused-vars","'AutoComplete' is defined but never used.","Identifier","unusedVar","'Cascader' is defined but never used.","'Checkbox' is defined but never used.","'Col' is defined but never used.","'InputNumber' is defined but never used.","'Row' is defined but never used.","'Select' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-native-reassign",["213"],"no-negated-in-lhs",["214"],"'Router' is defined but never used.","'QUERY_ME' is defined but never used.","'QUERY_TEST' is defined but never used.","'setUserdata' is assigned a value but never used.","no-const-assign","'currentStatus' is constant.","const","'currentPage' is assigned a value but never used.","'Input' is defined but never used.","'date' is assigned a value but never used.","'handleClickSubmit' is assigned a value but never used.","'setSize' is assigned a value but never used.","'items' is assigned a value but never used.","'setTags' is assigned a value but never used.","'userShops' is assigned a value but never used.","'setFormLayout' is assigned a value but never used.","'Empty' is defined but never used.","'genTypeStyle' is defined but never used.","'RangePicker' is assigned a value but never used.","'dateFormat' is assigned a value but never used.","'weekFormat' is assigned a value but never used.","'monthFormat' is assigned a value but never used.","'test' is assigned a value but never used.","'setUnitOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userShops'. Either include it or remove the dependency array.","ArrayExpression",["215"],"'useEffect' is defined but never used.","'Search' is assigned a value but never used.","'Item' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'PlusOutlined' is defined but never used.","'Tag' is defined but never used.","'Tooltip' is defined but never used.","'theme' is defined but never used.","'useRef' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},"Update the dependencies array to be: [userShops]",{"range":"218","text":"219"},[2243,2245],"[userShops]"]